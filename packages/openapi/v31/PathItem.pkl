/// Describes the operations available on a single path. A PathItem *MAY* be
/// empty, due to [ACL constraints](https://spec.openapis.org/oas/v3.1.0.html#security-filtering).
/// The path itself is still exposed to the documentation viewer but they will
/// not know which operations and parameters are available.
///
/// <https://spec.openapis.org/oas/v3.1.0.html#path-item-object>
@ModuleInfo { minPklVersion = "0.26.0" }
module openapi.v31.PathItem
extends "Extensible.pkl"

import ".../core.pkl"
import "Operation.pkl"
import "Parameter.pkl"
import "Reference.pkl"
import "Server.pkl"

/// Allows for a referenced definition of this path item.
///
/// The referenced structure *MUST* be in the form of a [PathItem] Object. In
/// case a [PathItem] Object field appears both in the defined object and the
/// referenced object, the behavior is undefined.
///
/// See the rules for resolving [Relative References](https://spec.openapis.org/oas/v3.1.0.html#relative-references-in-uris).
$ref: Uri?

/// An optional, string summary, intended to apply to all operations in this
/// path.
summary: core.NonEmptyString?

/// An optional, string description, intended to apply to all operations in this
/// path. CommonMark syntax *MAY* be used for rich text representation.
@SourceCode { language = "Markdown" }
description: core.NonEmptyString?

/// A definition of a GET operation on this path.
get: Operation?

/// A definition of a PUT operation on this path.
put: Operation?

/// A definition of a POST operation on this path.
post: Operation?

/// A definition of a DELETE operation on this path.
`delete`: Operation?

/// A definition of a GET operation on this path.
options: Operation?

/// A definition of a HEAD operation on this path.
head: Operation?

/// A definition of a PATCH operation on this path.
patch: Operation?

/// A definition of a TRACE operation on this path.
`trace`: Operation?

/// An alternative `server` array to service all operations in this path.
servers: Listing<Server>?

/// A list of parameters that are applicable for all the operations described
/// under this path.
///
/// - These parameters can be overridden at the operation level, but cannot be
///   removed there.
/// - The list **MUST NOT** include duplicated parameters. A unique parameter is
///   defined by a combination of a name and location.
/// - The list can use the [Reference] Object to link to parameters that are
///   defined at the OpenAPI Object components/parameters.
parameters: Listing<Parameter | Reference>(
  isDistinctBy((v) -> if (v is Parameter) "\(v.name):\(v.`in`)" else v.$ref)
)?
