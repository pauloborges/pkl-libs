/// Describes a single operation parameter.
///
/// A unique parameter is defined by a combination of a [name] and location.
///
/// ### Parameter locations
///
/// There are four possible parameter locations specified by the in field:
///
/// - `path` - Used together with [Path Templating](https://spec.openapis.org/oas/v3.1.0.html#path-templating),
///   where the parameter value is actually part of the operationâ€™s URL. This
///   does not include the host or base path of the API. For example, in
///   `/items/{itemId}`, the path parameter is `itemId`.
/// - `query` - Parameters that are appended to the URL. For example, in
///   `/items?id=###`, the query parameter is `id`.
/// - `header` - Custom headers that are expected as part of the request. Note
///    that RFC7230 Page 22 states header names are case insensitive.
/// - `cookie` - Used to pass a specific cookie value to the API.
///
/// <https://spec.openapis.org/oas/v3.1.0.html#parameter-object>
@ModuleInfo { minPklVersion = "0.26.0" }
module openapi.v31.Parameter
extends "AbstractParameter.pkl"

import ".../core.pkl"

/// **REQUIRED**.
///
/// The name of the parameter. Parameter names are case sensitive.
///
/// If [`in`] is `"path"`, the [name] field *MUST* correspond to a template
/// expression occurring within the path field in the [Paths] Object. See
/// [Path Templating](https://spec.openapis.org/oas/v3.1.0.html#path-templating)
/// for further information.
///
/// If [`in`] is `"header"` and the [name] field is `"Accept"`,
/// `"Content-Type"` or `"Authorization"`, the parameter definition *SHALL* be
/// ignored.
///
/// For all other cases, the name corresponds to the parameter name used by the
/// in property.
name: core.NonEmptyString

/// **REQUIRED**.
///
/// The location of the parameter.
`in`: Location

/// Determines whether this parameter is mandatory.
///
/// If the parameter location is `"path"`, this property is **REQUIRED** and its
/// value *MUST* be `true`. Otherwise, the property MAY be included and its
/// default value is `false`.
required: Boolean((`in` == "path").implies(this == true)) = false

/// Sets the ability to pass empty-valued parameters.
///
/// This is valid only for `query` parameters and allows sending a parameter
/// with an empty value.
///
/// Default value is `false`.
///
/// If [style] is used, and if behavior is `n/a` (cannot be serialized), the
/// value of [allowEmptyValue] SHALL be ignored. Use of this property is
/// *NOT RECOMMENDED*, as it is likely to be removed in a later revision.
allowEmptyValue: Boolean = false

/// Describes how the parameter value will be serialized depending on the type
/// of the parameter value.
///
/// Default values (based on value of [`in`]):
///
/// - for query - form
/// - for path - simple
/// - for header - simple
/// - for cookie - form.
style: Style =
  if (`in` == "query") "form"
  else if (`in` == "header") "simple"
  else if (`in` == "path") "simple"
  else if (`in` == "cookie") "form"
  else throw("Unknown in value: \(`in`)")

/// See [AbstractParameter.explode].
explode: Boolean = style == "form"

/// Determines whether the parameter value *SHOULD* allow reserved characters,
/// as defined by [RFC3986 Section 2.2](https://datatracker.ietf.org/doc/html/rfc3986#section-2.2)
/// `:/?#[]@!$&'()*+,;=` to be included without percent-encoding.
///
/// This property only applies to parameters with an [`in`] value of `"query"`.
/// The default value is `false`.
allowReserved: Boolean(implies(`in` == "query")) = false

typealias Location = "query" | "header" | "path" | "cookie"

/// In order to support common ways of serializing simple parameters, a set of style values are defined.
///
/// style  | type | in   | Comments
/// ------ | ---- | ---- | ---
/// `matrix` | `primitive`, `array`, `object` | `path` | Path-style parameters defined by [RFC6570 Section 3.2.7](https://tools.ietf.org/html/rfc6570#section-3.2.7)
/// `label`  | `primitive`, `array`, `object` | `path` | Label style parameters defined by [RFC6570 Section 3.2.5](https://tools.ietf.org/html/rfc6570#section-3.2.5)
/// `form`   | `primitive`, `array`, `object` | `query`, `cookie` | Form style parameters defined by [RFC6570 Section 3.2.8](https://datatracker.ietf.org/doc/html/rfc6570#section-3.2.8). This option replaces `collectionFormat` with a `csv` (when [explode] is `false`) or `multi` (when [explode] is `true`) value from OpenAPI 2.0.
/// `simple` | `array` | `path`, `header` | Simple style parameters defined by [RFC6570 Section 3.2.2](https://datatracker.ietf.org/doc/html/rfc6570#section-3.2.2). This option replaces `collectionFormat` with a `csv` value from OpenAPI 2.0.
/// `spaceDelimited` | `array`, `object` | `query` | Space separated array or object values. This option replaces `collectionFormat` equal to `ssv` from OpenAPI 2.0.
/// `pipeDelimited` | `array`, `object` | `query` | Pipe separated array or object values. This option replaces `collectionFormat` equal to `pipes` from OpenAPI 2.0.
/// `deepObject` | `object` | `query` | Provides a simple way of rendering nested objects using form parameters.
typealias Style = "matrix" | "label" | "form" | "simple" | "spaceDelimited" | "pipeDelimited" | "deepObject"
