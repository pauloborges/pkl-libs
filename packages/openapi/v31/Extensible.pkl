/// While the OpenAPI Specification tries to accommodate most use cases,
/// additional data can be added to extend the specification at certain points.
///
/// The extensions properties are implemented as patterned fields that are
/// always prefixed by `"x-"`.
///
/// The extensions may or may not be supported by the available tooling, but
/// those may be extended as well to add requested support (if tools are
/// internal or open-sourced).
///
/// <https://spec.openapis.org/oas/v3.1.0.html#specification-extensions>
@ModuleInfo { minPklVersion = "0.26.0" }
abstract module openapi.v31.Extensible

import ".../core.pkl"

/// This object *MAY* be extended with Specification Extensions.
extensions: Extensions?

/// The extensions properties are implemented as patterned fields that are
/// always prefixed by `"x-"`.
typealias ExtensionName = String(startsWith("x-"))

/// Allows extensions to the OpenAPI Schema.
///
/// The field name *MUST* begin with `"x-"`, for example, `"x-internal-id"`.
/// Field names beginning `"x-oai-"` and `"x-oas-"` are reserved for uses
/// defined by the OpenAPI Initiative.
///
/// The value can be `null`, a primitive, an array or an object.
typealias Extensions = Mapping<ExtensionName, Any>

hidden inlineFields: Listing<String> = new { "extensions" }

output {
  renderer = core.renderer(module.getClass(), inlineFields)
}
